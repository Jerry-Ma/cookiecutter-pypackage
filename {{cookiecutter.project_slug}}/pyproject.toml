{%- set license_classifiers = {
    'GNU Lesser General Public License v2.1': 'License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)',
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}
[project.urls]
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
documentation = "https://{{ cookiecutter.project_slug }}.readthedocs.io/"
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/blob/main/CHANGELOG.md"

[project]
name="{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version"]
license = {file = "LICENSE"}
keywords = ["{{ cookiecutter.project_slug }}"]
authors = [
  {name="{{ cookiecutter.full_name.replace('\"', '\\\"') }}", email="{{ cookiecutter.email }}"},
]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
  'Natural Language :: English',
{%- if cookiecutter.open_source_license in license_classifiers %}
  '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
]

dependencies = [
]

{%- if 'no' not in cookiecutter.command_line_interface|lower %}

[project.scripts]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.cli:main"
{%- endif %}

[tool.setuptools.package-data]
"*" = [
    "data/*",
    "data/*/*",
    "data/*/*/*",
    "data/*/*/*/*",
    "data/*/*/*/*/*",
    "data/*/*/*/*/*/*"
]

[build-system]
requires = ["setuptools",
            "setuptools_scm[toml]>=6.2",
            "wheel"]
build-backend = 'setuptools.build_meta'


[tool.setuptools_scm]
write_to = "src/{{ cookiecutter.project_slug }}/_version.py"

[project.optional-dependencies]
dev = [
    "pytest",
    "isort",
    "black",
    "ruff",
    "pre-commit",
    "sphinx",
    "myst_parser",
    "sphinx-book-theme",
    "sphinx-automodapi",
]

[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--doctest-modules"

[tool.black]
line-length = 88
force-exclude = '''
^/(
  (
    examples
    |
    docs
    |
    data
    |
    src/{{ cookiecutter.project_slug }}/_version.py
  )
)
'''

[tool.isort]
profile = "black"
extend_skip_glob = [
    "docs/*",
    "src/{{ cookiecutter.project_slug }}/_version.py"
]
group_by_package = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = ["ALL"]
exclude=[
    "docs/*",
    "src/{{ cookiecutter.project_slug }}/_version.py"
]

[tool.ruff.pydocstyle]
convention = "numpy"
